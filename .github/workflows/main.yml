name: Pre-Merge Checks

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  pre-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'yarn'
      # - uses: actions/cache@v2
      #   with:
      #     path: ~/.cache/yarn
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      # - name: Lint with ESLint
      #   run: yarn run lint 

      # - name: Build docker image
      #   run: docker build -t ${IMAGE_NAME} . --file Dockerfile 
      #   env:
      #     IMAGE_NAME: app

      # - name: Install dockle
      #   run: |
      #     VERSION=$(curl --silent "https://api.github.com/repos/goodwithtech/dockle/releases/latest" | \
      #     grep '"tag_name":' | \
      #     sed -E 's/.*"v([^"]+)".*/\1/' \
      #     )
      #     curl -L -o dockle.deb https://github.com/goodwithtech/dockle/releases/download/v${VERSION}/dockle_${VERSION}_Linux-64bit.deb
      #     sudo dpkg -i dockle.deb
      #     rm dockle.deb
      # - name: Check image with dockle
      #   run: dockle ${IMAGE_NAME}
      #   env:
      #     IMAGE_NAME: app

      # - name: Install Trivy
      #   run: |
      #     sudo apt-get install apt-transport-https gnupg
      #     wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
      #     echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
      #     sudo apt-get update
      #     sudo apt-get install trivy
      # - name: Vulnerability Scan with Trivy
      #   run: trivy image ${IMAGE_NAME}
      #   env:
      #     IMAGE_NAME: app

      - name: Generate coverage report
        run: yarn test:cov
      - name: Get coverage percentage
        run: |
          COVERAGE=$(grep "Statements" coverage/lcov.info | awk '{print $3}')
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
      # - name: Save coverage report
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: coverage-report
      #     path: ./coverage
#     - name: Run Tests and Check Coverage
#       run: |
#         yarn test --coverage --watchAll=false
#         bash <(curl -s https://codecov.io/bash) -t "${{ secrets.CODECOV_TOKEN }}"

#     - name: Report Coverage Status
#       uses: actions/upload-artifact@v2
#       with:
#         name: coverage-report
#         path: coverage

#     - name: Check Coverage Threshold
#       run: |
#         yarn add -D istanbul threshold-summary
#         istanbul check-coverage --lines 20

#     - name: Check Coverage of Sub-Projects
#       run: |
#         yarn workspaces foreach --include "packages/*" --parallel "yarn run test --coverage"
#         yarn workspaces foreach --include "packages/*" --parallel "bash <(curl -s https://codecov.io/bash) -t '${{ secrets.CODECOV_TOKEN }}'"
